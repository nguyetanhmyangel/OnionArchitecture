<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OnionArchitecture.Api</name>
    </assembly>
    <members>
        <member name="T:OnionArchitecture.Api.Controllers.BaseApiController`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OnionArchitecture.Api.Controllers.IdentityController">
            <summary>
            
            </summary>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.IdentityController.#ctor(OnionArchitecture.Application.Interfaces.Services.IIdentityService)">
            <summary>
            
            </summary>
            <param name="identityService"></param>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.IdentityController.GetTokenAsync(OnionArchitecture.Application.DTOs.Identity.TokenRequest)">
            <summary>
            Generates a JSON Web Token for a valid combination of emailId and password.
            </summary>
            <param name="tokenRequest"></param>
            <returns></returns>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.IdentityController.RegisterAsync(OnionArchitecture.Application.DTOs.Identity.RegisterRequest)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.IdentityController.ConfirmEmailAsync(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.IdentityController.ForgotPassword(OnionArchitecture.Application.DTOs.Identity.ForgotPasswordRequest)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.IdentityController.ResetPassword(OnionArchitecture.Application.DTOs.Identity.ResetPasswordRequest)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:OnionArchitecture.Api.Controllers.v1.AttachmentController">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.v1.AttachmentController.GetAll">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.v1.AttachmentController.GetById(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.v1.AttachmentController.Post(OnionArchitecture.Application.Features.Attachments.Commands.Create.CreateAttachmentCommand)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.v1.AttachmentController.Put(System.Int32,OnionArchitecture.Application.Features.Attachments.Commands.Update.UpdateAttachmentCommand)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:OnionArchitecture.Api.Controllers.v1.AttachmentController.Delete(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:OnionArchitecture.Api.Extensions.ApplicationBuilderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:OnionArchitecture.Api.Extensions.ApplicationBuilderExtensions.ConfigureSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:OnionArchitecture.Api.Extensions.ServiceCollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:OnionArchitecture.Api.Extensions.ServiceCollectionExtensions.AddSharedInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Config add share Services / Api project
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:OnionArchitecture.Api.Extensions.ServiceCollectionExtensions.AddEssentials(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
             config add Swagger and Version /Api project
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:OnionArchitecture.Api.Extensions.ServiceCollectionExtensions.AddContextInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Config in Api project
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:OnionArchitecture.Api.Middlewares.ErrorHandlerMiddleware">
            <summary>
            
            </summary>
        </member>
        <member name="M:OnionArchitecture.Api.Middlewares.ErrorHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:OnionArchitecture.Api.Middlewares.ErrorHandlerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:OnionArchitecture.Api.Program">
             <summary>
            
             </summary>
        </member>
        <member name="M:OnionArchitecture.Api.Program.Main(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="M:OnionArchitecture.Api.Program.CreateHostBuilder(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
             <returns></returns>
        </member>
        <member name="T:OnionArchitecture.Api.Services.AuthenticatedUserService">
            <summary>
            
            </summary>
        </member>
        <member name="M:OnionArchitecture.Api.Services.AuthenticatedUserService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            
            </summary>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="T:OnionArchitecture.Api.Startup">
             <summary>
            
             </summary>
        </member>
        <member name="M:OnionArchitecture.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
             <summary>
            
             </summary>
             <param name="configuration"></param>
        </member>
        <member name="M:OnionArchitecture.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
             <summary>
            
             </summary>
             <param name="services"></param>
        </member>
        <member name="M:OnionArchitecture.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
             <summary>
            
             </summary>
             <param name="app"></param>
             <param name="env"></param>
        </member>
    </members>
</doc>
